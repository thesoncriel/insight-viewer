unit UIWrapper_StageGridUnit;

interface

uses
  FMX.TabControl, FMX.Grid, FMX.Types, Classes, DB, Data.Bind.DBScope,
  Fmx.Bind.DBLinks;
type
  TUIWrapper_StageGrid = class(TTabItem)
    private
      FGrid: TStringGrid;
      FBind: TBindScopeDB;
      FDataSource: TDataSource;
      FLiveBind: TBindDBGridLink;
    public
      constructor Create(owner: TComponent); override;
      destructor Destroy; override;
      procedure SetTitle(title: String);
      procedure SetData(data: TDataSet);
      procedure Clear;
  end;
implementation

uses
  Windows;

{ TUIWrapper_StageGrid }

procedure TUIWrapper_StageGrid.Clear;
begin
  if FDataSource.DataSet <> nil then FDataSource.DataSet.Free;
end;

constructor TUIWrapper_StageGrid.Create(owner: TComponent);
begin
  inherited;
  FGrid := TStringGrid.Create( nil );
  FDataSource := TDataSource.Create( nil );
  FBind := TBindScopeDB.Create( nil );
  FLiveBind := TBindDBGridLink.Create( nil );

  FGrid.Align := TAlignLayout.alClient;
  FBind.DataSource := FDataSource;
  FLiveBind.DataSource := FBind;
  FLiveBind.GridControl := FGrid;

  self.AddObject( FGrid );
end;

destructor TUIWrapper_StageGrid.Destroy;
begin
  Clear;
  FDataSource.Free;
  FBind.Free;
  FLiveBind.Free;
  FGrid.Free;
  inherited;
end;

procedure TUIWrapper_StageGrid.SetData(data: TDataSet);
begin
  FDataSource.DataSet := data;
end;

procedure TUIWrapper_StageGrid.SetTitle(title: String);
begin
  self.Text := title;
end;

end.
