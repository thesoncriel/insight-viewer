unit StageOptionPartList;

interface

uses
  UIWappedPartUnit, System.Classes, FMX.Controls, UIWrapper_StageEditorUnit,
  StageOptionPart, SearchOption_Intf;

type
  TStageOptionList = class(TAbsUIWrappedPart)
    private
      FChkAutoDetect: TCheckBox;
      FStageEditor: TUIWrapper_StageEditor;
      FAutoStgOpt: TAbsSearchOptionPart;
    protected
      procedure ChkAutoDetectCheckedChange(Sender: TObject);
    public
      constructor Create(owner: TExpander; autoDetect: TCheckBox;
        stageEditor: TUIWrapper_StageEditor);
      destructor Destroy;
      //procedure Add(stageOpt: TStageOption);
      //procedure Remove(stageOpt: TStageOption);
      function Count: Integer;
      function GetStageOption(index: Integer): TStageOption;

      function GetValues(key: String): String; override;
      procedure SetValues(key, val: String); override;
  end;

implementation

uses
  HashedOptionPart;

{ TStageOptionList }

//procedure TStageOptionList.Add(stageOpt: TStageOption);
//begin
//  FList.Add( @stageOpt );
//end;

procedure TStageOptionList.ChkAutoDetectCheckedChange(Sender: TObject);
begin
  FStageEditor.SetEnabled( not FChkAutoDetect.IsChecked );
end;

function TStageOptionList.Count: Integer;
begin
  result := FStageEditor.Count;
end;

constructor TStageOptionList.Create(owner: TExpander; autoDetect: TCheckBox;
        stageEditor: TUIWrapper_StageEditor);
begin
  Init( owner );
  FChkAutoDetect := autoDetect;
  FStageEditor := stageEditor;

  FChkAutoDetect.OnChange := ChkAutoDetectCheckedChange;
  FAutoStgOpt := THashedOptionPart.Create;
  FAutoStgOpt.SetValues( 'stage.auto_use', 'false' );
  FAutoStgOpt.SetValues( 'stage.auto_stagenum', '0' );
  FAutoStgOpt.SetValues( 'stage.auto_tablename', 'DATELOG' );
  FAutoStgOpt.SetValues( 'stage.auto_stagecol', 'STAGE' );
  FAutoStgOpt.SetValues( 'stage.auto_datecol', 'DATETIME' );
end;

//procedure TStageOptionList.Remove(stageOpt: TStageOption);
//begin
//  FList.Remove( @stageOpt );
//end;

procedure TStageOptionList.SetValues(key, val: String);
var
  bSetVal: Boolean;
begin
  if key = 'auto_use' then
  begin
    bSetVal := val = 'firebird';
    FChkAutoDetect.IsChecked := bSetVal;
    FChkAutoDetect.Enabled := bSetVal;

    FAutoStgOpt.SetValues( key, val );
  end;
end;

destructor TStageOptionList.Destroy;
begin
  FAutoStgOpt.Free;
end;

function TStageOptionList.GetStageOption(index: Integer): TStageOption;
begin
  result := FStageEditor.GetStageOption( index );
end;

function TStageOptionList.GetValues(key: String): String;
begin

end;

end.
