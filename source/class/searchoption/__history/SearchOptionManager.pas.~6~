unit SearchOptionManager;

interface

uses
  SearchOption, DBManager;

type
  TSearchOptionManager = class(TSearchOption)
    private
      FDBMS: TAbsDBManager;
    protected
      function GetDBMSName: String;
      procedure SetDBMSName(dbms: String);
    public
      procedure SetDBManager(dbm: TAbsDBManager);
  end;

implementation

uses
  MsSqlDBManager, FireBirdDBManager;

{ TSearchOptionManager }

function TSearchOptionManager.GetDBMSName: String;
begin
  if FDBMS <> nil then
    result := FDBMS.GetDBMSName
  else
    result := '';
end;

procedure TSearchOptionManager.SetDBManager(dbm: TAbsDBManager);
begin
  FDBMS := dbm
end;

procedure TSearchOptionManager.SetDBMSName(dbms: String);
begin
  if FDBMS.GetDBMSName <> dbms then
  begin
    FDBMS.Free;

    if dbms = DBMS_MSSQL  then
      FDBMS := TMsSQLDBManager.Create
    else if dbms = DBMS_FIREBIRD then
      FDBMS := TFireBirdDBManager.Create;
  end;
end;

end.
